/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package interfaceGrafica;

import backend.Jogo;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author yuria
 */
public final class TelaLoja extends javax.swing.JFrame {
    
    public static List<Jogo> listaJogos = new ArrayList();
    public static Jogo jogo;
    

    /**
     * Creates new form JogoJFrame
     */
    public TelaLoja() {
        initComponents();
        acessaBanco();
        carregarTabelaJogos();
        jCheckBoxPesquisaNome.setSelected(true);
    }
    
    // Pega as informações do banco de dados e carrega na tabela de jogos
    public void carregarTabelaJogos(){
        // Define o modelo da tabela de jogos
        DefaultTableModel modelo = new DefaultTableModel(new Object[] {"Nome","Preço","Gênero","Requisitos"},0);
        // Seta o modelo da tabela 
        tabelaJogos.setModel(modelo);
        
        // Se a caixa de pesquisa por nome estiver selecionado, ele vai realizar uma pesquisa pelo nome do jogo, se não ele faz uma pesquisa por gênero
        if (jCheckBoxPesquisaNome.isSelected()){
            for(int i=0;i<listaJogos.size();i++){
                // Se o campo de pesquisa não estiver vazio, ele realiza a pesquisa pelo jogo pelo nome
                if (!jTextFieldPesquisa.getText().trim().isEmpty()){
                    if (listaJogos.get(i).getNome().contains(jTextFieldPesquisa.getText())){
                        Object linha[] = new Object[]{listaJogos.get(i).getNome(),
                                            String.format("%.2f", listaJogos.get(i).getPreco()) + " R$",
                                            listaJogos.get(i).getGenero(),
                                            listaJogos.get(i).getRequisitos()};
                        modelo.addRow(linha);
                    }
                }
                // Se não ele mostra todos os jogos
                else {
                    Object linha[] = new Object[]{listaJogos.get(i).getNome(),
                                            String.format("%.2f", listaJogos.get(i).getPreco()) + " R$",
                                            listaJogos.get(i).getGenero(),
                                            listaJogos.get(i).getRequisitos()};
                    modelo.addRow(linha);
                }
            }
        }
        else {
            for(int i=0;i<listaJogos.size();i++){
                // Se o campo de pesquisa não estiver vazio, ele realiza a pesquisa pelo jogo pelo gênero
                if (!jTextFieldPesquisa.getText().trim().isEmpty()){
                    if (listaJogos.get(i).getGenero().contains(jTextFieldPesquisa.getText())){
                        Object linha[] = new Object[]{listaJogos.get(i).getNome(),
                                            String.format("%.2f", listaJogos.get(i).getPreco()) + " R$",
                                            listaJogos.get(i).getGenero(),
                                            listaJogos.get(i).getRequisitos()};
                        modelo.addRow(linha);
                    }
                }
                // Se não ele mostra todos os jogos
                else {
                    Object linha[] = new Object[]{listaJogos.get(i).getNome(),
                                            String.format("%.2f", listaJogos.get(i).getPreco()) + " R$",
                                            listaJogos.get(i).getGenero(),
                                            listaJogos.get(i).getRequisitos()};
                    modelo.addRow(linha);
                }
            }
        }
        
        // Seta a largura das colunas
        tabelaJogos.getColumnModel().getColumn(0).setPreferredWidth(200);
        tabelaJogos.getColumnModel().getColumn(1).setPreferredWidth(1);
        tabelaJogos.getColumnModel().getColumn(2).setPreferredWidth(200);
        tabelaJogos.getColumnModel().getColumn(3).setPreferredWidth(100);
    }
    
    // Função que extrai os dados do banco de dados
    private void acessaBanco(){
        // Criando alguns jogos para Teste
        listaJogos = TelaPrincipal.listaJogos;
        /**
         * implementar o banco de dados aqui;
         */
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        tabelaJogos = new javax.swing.JTable();
        jButtonPesquisar = new javax.swing.JButton();
        jTextFieldPesquisa = new javax.swing.JTextField();
        jButtonVoltar = new javax.swing.JButton();
        jCheckBoxPesquisaNome = new javax.swing.JCheckBox();
        jCheckBoxPesquisaGenero = new javax.swing.JCheckBox();
        jButtonComprar = new javax.swing.JButton();
        jButtonPerfil = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Perfil do Desenvolvedor");

        tabelaJogos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Nome", "Preço", "Gênero", "Requisitos"
            }
        ));
        jScrollPane2.setViewportView(tabelaJogos);

        jButtonPesquisar.setText("Pesquisar");
        jButtonPesquisar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonPesquisarActionPerformed(evt);
            }
        });

        jTextFieldPesquisa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldPesquisaActionPerformed(evt);
            }
        });

        jButtonVoltar.setText("Voltar");
        jButtonVoltar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonVoltarActionPerformed(evt);
            }
        });

        jCheckBoxPesquisaNome.setText("Nome");
        jCheckBoxPesquisaNome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxPesquisaNomeActionPerformed(evt);
            }
        });

        jCheckBoxPesquisaGenero.setText("Gênero");
        jCheckBoxPesquisaGenero.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxPesquisaGeneroActionPerformed(evt);
            }
        });

        jButtonComprar.setText("Comprar");
        jButtonComprar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonComprarActionPerformed(evt);
            }
        });

        jButtonPerfil.setText("Acessar Perfil");
        jButtonPerfil.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonPerfilActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jTextFieldPesquisa, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonPesquisar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jCheckBoxPesquisaNome)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jCheckBoxPesquisaGenero)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 29, Short.MAX_VALUE)
                        .addComponent(jButtonPerfil)
                        .addGap(26, 26, 26)
                        .addComponent(jButtonVoltar))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButtonComprar)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonVoltar)
                    .addComponent(jButtonPesquisar)
                    .addComponent(jTextFieldPesquisa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jCheckBoxPesquisaNome)
                    .addComponent(jCheckBoxPesquisaGenero)
                    .addComponent(jButtonPerfil))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 315, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonComprar)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonPesquisarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonPesquisarActionPerformed
        carregarTabelaJogos();
    }//GEN-LAST:event_jButtonPesquisarActionPerformed

    private void jTextFieldPesquisaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldPesquisaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldPesquisaActionPerformed

    private void jButtonVoltarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonVoltarActionPerformed
        // Volta para a tela principal
        new TelaPrincipal().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButtonVoltarActionPerformed

    private void jCheckBoxPesquisaNomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxPesquisaNomeActionPerformed
        // Se o botão de nome estiver selecionado, ele deseleciona o botao de gênero
        jCheckBoxPesquisaGenero.setSelected(false);
    }//GEN-LAST:event_jCheckBoxPesquisaNomeActionPerformed

    private void jCheckBoxPesquisaGeneroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxPesquisaGeneroActionPerformed
        // Se o botão de nome estiver selecionado, ele deseleciona o botao de gênero
        jCheckBoxPesquisaNome.setSelected(false);
    }//GEN-LAST:event_jCheckBoxPesquisaGeneroActionPerformed

    private void jButtonComprarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonComprarActionPerformed
        int i = tabelaJogos.getSelectedRow();
        // Verifica se algum jogo foi selecionado
        if (i == -1){
            JOptionPane.showMessageDialog(null,"Nenhum jogo selecionado", "Mensagem",JOptionPane.PLAIN_MESSAGE);
        }
        else {
            // Tenta realizar a compra do jogo
            try {
                System.out.println(listaJogos.get(i).getNome());
                jogo = listaJogos.get(i);
                new TelaComprar().setVisible(true);
                this.dispose();
            } catch (Exception e){
                // Se não tiver nenhuma conta registrada, é informado ao usuario e abre a tela de login
                System.err.println(e);
                
                JOptionPane.showMessageDialog(null,"Nenhuma conta encontrada, cadastre-se ou entre em uma conta antes de comprar um jogo", "Mensagem",JOptionPane.PLAIN_MESSAGE);
                
                new TelaLoginCliente().setVisible(true);
                this.dispose();
            }
        }
    }//GEN-LAST:event_jButtonComprarActionPerformed

    private void jButtonPerfilActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonPerfilActionPerformed
        // TODO add your handling code here:
        // Tenta abrir a tela de perfil do usuario, se não conseguir, ele informa que nenhum usuario foi encontrado e abre a tela de login
        try{
            new TelaPerfilCliente().setVisible(true);
            this.dispose();
        } catch(Exception e){
            System.err.println(e);
                
            JOptionPane.showMessageDialog(null,"Nenhuma conta encontrada, cadastre-se ou entre em uma conta antes de comprar um jogo", "Mensagem",JOptionPane.PLAIN_MESSAGE);

            new TelaLoginCliente().setVisible(true);
            this.dispose();
        }
    }//GEN-LAST:event_jButtonPerfilActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TelaLoja.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TelaLoja.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TelaLoja.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaLoja.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TelaLoja().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonComprar;
    private javax.swing.JButton jButtonPerfil;
    private javax.swing.JButton jButtonPesquisar;
    private javax.swing.JButton jButtonVoltar;
    private javax.swing.JCheckBox jCheckBoxPesquisaGenero;
    private javax.swing.JCheckBox jCheckBoxPesquisaNome;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField jTextFieldPesquisa;
    private javax.swing.JTable tabelaJogos;
    // End of variables declaration//GEN-END:variables

    
}
